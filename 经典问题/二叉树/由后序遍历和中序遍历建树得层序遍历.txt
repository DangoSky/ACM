#include <bits/stdc++.h>
using namespace std;
struct node
{
	int data;
	node* lchild;
	node* rchild;
};
int pre[543],in[543],post[543];
int n;
node* create(int postl,int postr,int inl,int inr)
{
	if(postl>postr)  return NULL;
	node* root=new node;
	root->data=post[postr];
	int k;
	for(k=inl;k<=inr;k++)
	{
		if(in[k]==post[postr]) break;
	}
	int numleft=k-inl;
	root->lchild=create(postl,postl+numleft-1,inl,k-1);
	root->rchild=create(postl+numleft,postr-1,k+1,inr);
        //root->lchild=create(prel+1,prel+numleft,inl,k-1);
	//root->rchild=create(prel+numleft+1,prer,k+1,inr); 
	return root;
}
int num=0; 
void layerorder(node* root)
     {
     	queue<node*> q;
     	q.push(root);
     	while(!q.empty())
     	{        
     		node* now=q.front();
     		q.pop();     	
     		printf("%d",now->data);     	  
     		num++;     		
     		if(num<n)  printf(" ");    	 
     		if(now->lchild != NULL)  q.push(now->lchild);
			if(now->rchild != NULL)  q.push(now->rchild);
		 }
	 }
	 	 
int main()
{
     cin>>n;
     for(int i=0;i<n;i++)
        scanf("%d",&post[i]);
    for(int i=0;i<n;i++)
        scanf("%d",&in[i]);
    node* root=create(0,n-1,0,n-1);
	layerorder(root);
	return 0;
 } 